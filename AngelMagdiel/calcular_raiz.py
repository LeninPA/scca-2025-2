# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HI862SeptZpeSHM8LAe6nrLoCBbrq-b7
"""

import sys
import math



sys.argv = ["script_name", "16"]

def raiz_cuadrada_newton(numero, iteraciones=10):
    if numero < 0:
        raise ValueError("No se puede calcular la raíz cuadrada de un número negativo.")
    if numero == 0:
        return 0
    aproximacion = numero / 2.0
    for _ in range(iteraciones):
        aproximacion = (aproximacion + numero / aproximacion) / 2.0
    return aproximacion

def main():

    if 'ipykernel' in sys.modules:

        numero = 300.0
    else:

        if len(sys.argv) != 2:
            print("Uso: python calcular_raiz.py <número>")

            return
        try:
            numero = float(sys.argv[1])
        except ValueError:
            print("Por favor, ingrese un número válido.")

            return

    try:
        resultado_newton = raiz_cuadrada_newton(numero)
        resultado_math = math.sqrt(numero)
        error = abs(resultado_newton - resultado_math)

        print(f"Número: {numero}")
        print(f"Raíz cuadrada (Newton-Raphson): {resultado_newton}")
        print(f"Raíz cuadrada (math.sqrt): {resultado_math}")
        print(f"Error absoluto: {error}")
    except ValueError as e:
        print(e)

        return

if __name__ == "__main__":
    main()



